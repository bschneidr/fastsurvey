
R version 3.2.1 (2015-06-18) -- "World-Famous Astronaut"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin13.4.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(survey)
Loading required package: grid
Loading required package: Matrix
Loading required package: survival

Attaching package: 'survey'

The following object is masked from 'package:graphics':

    dotchart

> library(survival)
> data(nwtco)
> 
> ntwco<-subset(nwtco, !is.na(edrel))
> 
> load("nwtco-subcohort.rda")
> nwtco$subcohort<-subcohort
> 
> d_BorganII <- twophase(id=list(~seqno,~seqno),
+                        strata=list(NULL,~interaction(instit,rel)),
+                        data=nwtco, subset=~I(rel |subcohort))
> 
> ##Coefficient results same as Splus with code from
> ## http://faculty.washington.edu/norm/software.html
> ## SE slightly larger due to using sandwich variance.
> 
> svycoxph(Surv(edrel, rel)~factor(stage)+factor(histol)+I(age/12), design=d_BorganII)
Call:
svycoxph(formula = Surv(edrel, rel) ~ factor(stage) + factor(histol) + 
    I(age/12), design = d_BorganII)


                  coef exp(coef) se(coef)      z       p
factor(stage)2  0.4629      1.59   0.1809  2.559 1.0e-02
factor(stage)3  0.5831      1.79   0.1785  3.267 1.1e-03
factor(stage)4  1.0597      2.89   0.2052  5.163 2.4e-07
factor(histol)2 1.5974      4.94   0.1334 11.973 0.0e+00
I(age/12)       0.0299      1.03   0.0334  0.897 3.7e-01

Likelihood ratio test=  on 5 df, p=  n= 1062, number of events= 571 
> 
> ##
> ## This gives higher standard errors. calibrate() does not recompute the
> ## finite population correction if a calibration variable happens to predict
> ## sampling perfectly. It probably should.
> ##
> d_BorganIIps<-calibrate(twophase(id=list(~seqno,~seqno),
+                            strata=list(NULL,~rel),
+                            data=nwtco, subset=~I(rel |subcohort)), 
+                         phase=2, formula=~interaction(instit,rel),
+                         epsilon=1e-10)
> 
> svycoxph(Surv(edrel, rel)~factor(stage)+factor(histol)+I(age/12), design=d_BorganIIps)
Call:
svycoxph(formula = Surv(edrel, rel) ~ factor(stage) + factor(histol) + 
    I(age/12), design = d_BorganIIps)


                  coef exp(coef) se(coef)      z       p
factor(stage)2  0.4629      1.59   0.1808  2.561 1.0e-02
factor(stage)3  0.5831      1.79   0.1784  3.269 1.1e-03
factor(stage)4  1.0597      2.89   0.2051  5.166 2.4e-07
factor(histol)2 1.5974      4.94   0.1304 12.246 0.0e+00
I(age/12)       0.0299      1.03   0.0333  0.899 3.7e-01

Likelihood ratio test=  on 5 df, p=  n= 1062, number of events= 571 
> 
> proc.time()
   user  system elapsed 
  2.024   0.108   2.151 
